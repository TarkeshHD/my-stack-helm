# Global configurations
global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""

# Frontend configuration
frontend:
  enabled: true
  replicaCount: 2
  
  image:
    repository: tarkesh/my-amplify-app
    tag: latest
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 80
    targetPort: 3000
  
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
    hosts:
      - host: my-app.local
        paths:
          - path: /
            pathType: Prefix
    tls: []
  
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
  
  env:
    NODE_ENV: production
    REACT_APP_API_URL: http://backend-service:8000

# Backend configuration
backend:
  enabled: true
  replicaCount: 2
  
  image:
    repository: tarkesh/backend-automation
    tag: latest
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 8000
    targetPort: 8000
  
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
    hosts:
      - host: api.my-app.local
        paths:
          - path: /api
            pathType: Prefix
    tls: []
  
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi
  
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
  
  env:
    NODE_ENV: production
    PORT: 8000
    CORS_ORIGIN: http://my-app.local
  
  # Database configuration (if needed)
  database:
    enabled: false
    host: ""
    port: 5432
    name: ""
    username: ""
    password: ""
  
  # Redis configuration (if needed)
  redis:
    enabled: false
    host: ""
    port: 6379
